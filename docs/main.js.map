{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addtask/addtask.component.css","webpack:///./src/app/addtask/addtask.component.html","webpack:///./src/app/addtask/addtask.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/tasklist/tasklist.component.css","webpack:///./src/app/tasklist/tasklist.component.html","webpack:///./src/app/tasklist/tasklist.component.ts","webpack:///./src/app/todo.service.ts","webpack:///./src/app/token.service.ts","webpack:///./src/app/userdata.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \":host {\\n\\tdisplay: block;\\n\\tmargin: auto;\\n\\twidth: 50%;\\n}\\n\\n.addTaskLabel {\\n\\tfont-size: 3em;\\n\\tmargin-bottom: .5em;\\n}\\n\\n.addTaskForm {\\n\\twidth: 40em;\\n}\\n\\n.addTaskInput {\\n\\twidth: 25em;\\n\\theight: 2em;\\n\\tpadding-left: .5em;\\n\\tfont-size: 1em;\\n\\tborder: 0px;\\n\\tborder-bottom: 1px solid black;\\n}\\n\\n.addTaskInput:focus {\\n\\toutline: none;\\n\\tborder-bottom: 2px solid grey;\\n}\\n\\n.addTaskSubmitBtn {\\n\\tpadding: .5em 1.5em .5em 1.5em;\\n\\tborder-radius: 2px;\\n\\tfont-size: 1em;\\n\\tmargin-left: .5em;\\n}\\n\\n.addTaskSubmitBtn:hover {\\n\\tborder: 1px solid lightgrey;\\n\\tcursor: pointer;\\n}\"","module.exports = \"\\n<h3 class = \\\"addTaskLabel\\\">Add Task</h3>\\n\\n<form class = \\\"addTaskForm\\\" action = \\\"#\\\" method=\\\"post\\\">\\n\\n\\t<input [(ngModel)] = \\\"item\\\" \\n\\tplaceholder=\\\"Enter Task\\\" class = \\\"addTaskInput\\\"\\n\\ttype=\\\"text\\\" name = \\\"task\\\"/>\\n\\t\\n\\t<button (click) = add() class = \\\"addTaskSubmitBtn\\\">Submit</button>\\n</form>\\n\"","import { TodoService } from '../todo.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\nexport class AddtaskComponent {\n\n  constructor(private todo: TodoService) { }\n\n  item: string;\n\n  add() {\n    this.todo.addItem(this.item, JSON.parse(sessionStorage.getItem('jsessionid')).access_token);\n    console.log(this.item);\n    this.item = '';\n  }\n\n}\n","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","import {TokenService} from './token.service';\nimport { UserData } from './userdata';\nimport {HttpHeaders} from '@angular/common/http';\nimport {HttpClient} from '@angular/common/http';\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent { }\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {TokenService} from './token.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TasklistComponent } from './tasklist/tasklist.component';\nimport { AddtaskComponent } from './addtask/addtask.component';\nimport { TodoService } from './todo.service';\n\nconst appRoutes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: '**', component: HomeComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    TasklistComponent,\n    AddtaskComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [TokenService, TodoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \":host { \\n  display:block;\\n  height: 3em;\\n  width: 100%;\\n  position: fixed;\\n  background-color: lightgrey;\\n  bottom:0px;\\n}\\n\\n.copyText {\\n  padding-top: 2.7em;\\n  padding-right: 1em;\\n  font-size: .5em;\\n  opacity: .3;\\n  float: right;\\n}\"","module.exports = \"<h1 class = \\\"copyText\\\"> &copy; 2019 angulartodo.com</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \":host {\\n\\tdisplay:block;\\n\\theight:3em;\\n\\tpadding-left:1em;\\n\\tbackground-color:#f4f4f4;\\n\\tborder-top: .7em solid #f4f4f4;\\n\\tborder-left: .5em solid #f4f4f4;\\n}\\n\\n.title {\\n\\tmargin-top:0px;\\n}\\n\\n\"","module.exports = \"<h1 class = \\\"title\\\">TO-DO List</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  constructor() { }\n\n}\n","module.exports = \"\"","module.exports = \"<app-addtask></app-addtask>\\n<app-tasklist></app-tasklist>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  constructor(private router: Router) {\n    const token = sessionStorage.getItem('jsessionid');\n\n    if (token === null || JSON.parse(token).expires_in < new Date().getTime()) {\n      router.navigateByUrl('/login');\n    }\n\n  }\n\n\n}\n","module.exports = \":host {\\n\\tdisplay:block;\\n\\twidth:50%;\\n\\tmargin:auto;\\n}\\n\\n.input {\\n  width: 25em;\\n  height: 2em;\\n  padding-left: .5em;\\n  padding-top:.5em;\\n  margin-bottom: .5em;\\n  font-size: 1em;\\n\\n  border: 0px;\\n  border-bottom: 1px solid black;\\n}\\n\\n.input:focus {\\n  outline: none;\\n  border-bottom: 2px solid grey;\\n\\n}\\n\\n.error {\\n\\tcolor:red;\\n\\twidth: 25em;\\n\\theight: 2em;\\n\\tpadding-top: .5em;\\n\\tfont-size: 1em;\\n}\\n\\n.submitBtn {\\n\\t\\n  padding: .5em 1.5em .5em 1.5em;\\n  border-radius: 2px;\\n  font-size: 1em;\\n  margin-left: .5em;\\n}\\n\\n.submitBtn:hover {\\n  border: 1px solid lightgrey;\\n  cursor: pointer;\\n}\"","module.exports = \"<h1>Log In</h1>\\n\\n<form class = \\\"loginForm\\\" (submit)=\\\"login()\\\">\\n\\t\\t\\n\\t\\t<input class = \\\"input\\\"\\n\\t\\t\\trequired\\n\\t\\t\\tplaceholder = \\\"Enter Username\\\"\\n\\t\\t\\t[(ngModel)] = \\\"userData.username\\\"\\n\\t\\t\\t#name = \\\"ngModel\\\"\\n\\t\\t\\tname = \\\"name\\\"\\n\\t\\t\\ttype = \\\"text\\\"\\n\\t\\t\\t(input)=\\\"error=false\\\"/>\\n\\t\\t\\t\\n\\t\\t<div class = \\\"error\\\" *ngIf = \\\"name.touched && name.errors != null\\\">\\n\\t\\t\\t<div *ngIf =\\\"name.errors.required\\\">\\n\\t\\t\\t\\t<label>ERROR: Required Field</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<input class = \\\"input\\\"\\n\\t\\t\\trequired\\n\\t\\t\\tplaceholder = \\\"Enter Password\\\"\\n\\t\\t\\t[(ngModel)] = \\\"userData.password\\\"\\n\\t\\t\\t#pass = \\\"ngModel\\\"\\n\\t\\t\\tname = \\\"pass\\\"\\n\\t\\t\\ttype = \\\"text\\\"\\n\\t\\t\\t(input)=\\\"error=false\\\"/>\\n\\t\\t\\t\\n\\t\\t<div class = \\\"error\\\" *ngIf = \\\"pass.touched && pass.errors != null\\\">\\n\\t\\t\\t<div *ngIf =\\\"pass.errors.required\\\">\\n\\t\\t\\t\\t<label>ERROR: Required Field</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class = \\\"error\\\" *ngIf=\\\"error\\\">\\n\\t\\t\\t<label>ERROR: invalid info</label>\\n\\t\\t</div>\\n\\t\\t<br /> \\n\\t\\t\\n\\t\\t<button class = \\\"submitBtn\\\">Submit</button>\\n\\n</form>\\n\"","import { TokenService } from '../token.service';\nimport { UserData } from '../userdata';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private tokenService: TokenService, private router: Router) { }\n\n  userData: UserData = new UserData();\n\n  error = false;\n\n  login() {\n    if(this.userData.username.length > 0 && this.userData.password.length > 0) {\n      this.tokenService.getToken(this.userData).subscribe(result => {\n\n        result.expires_in = new Date().getTime() + result.expires_in * 1000;\n\n        sessionStorage.setItem('jsessionid', JSON.stringify(result));\n\n        this.router.navigateByUrl('/home');\n\n      }, error => this.error = true);\n    }\n  }\n\n}\n","module.exports = \":host {\\n\\tdisplay: block;\\n\\tmargin: auto;\\n\\tmargin-top: 3em;\\n\\twidth: 50%;\\n}\\n\\n.showTasksLabel {\\n\\tfont-size: 3em;\\n}\\n\\n.taskList {\\n\\tfont-size: 2em;\\n\\tlist-style-type: square;\\n}\\n\\nnav ul {\\n\\theight:300px;\\n\\twidth:40%;\\n\\t\\n\\toverflow:hidden;\\n\\toverflow-y:scroll;\\n}\\n\"","module.exports = \"<label class = \\\"showTasksLabel\\\">Tasks</label>\\n\\n<nav>\\n\\t<ul class = \\\"taskList\\\">\\n\\t\\t<li *ngFor = \\\"let item of todo.todoList\\\">{{item}}</li>\\n\\t</ul>\\n</nav>\\n\"","import {TodoService} from '../todo.service';\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-tasklist',\n  templateUrl: './tasklist.component.html',\n  styleUrls: ['./tasklist.component.css']\n})\nexport class TasklistComponent {\n\n\n  constructor(public todo: TodoService) {}\n\n\n}\n","import {HttpHeaders} from '@angular/common/http';\nimport {HttpParams} from '@angular/common/http';\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class TodoService {\n\n  todoList = [];\n\n  constructor(private http: HttpClient) {this.load();}\n\n  load() {\n    const token = sessionStorage.getItem('jsessionid');\n\n    const tokenJSON = JSON.parse(token);\n\n    if (token != null || tokenJSON.expires_in < new Date().getTime()) {\n\n      const getTaskUrl = 'http://localhost:8080/getTasks';\n\n      const getTaskHeaders: HttpHeaders = new HttpHeaders()\n        .append('Authorization', 'Bearer' + tokenJSON.access_token);\n\n      this.http.post(getTaskUrl, {\n        withCredentials: true\n      }, {\n          headers: getTaskHeaders\n        }).subscribe((res) => {\n          console.log(res);\n          for (let i = 0; ; i++) {\n            if (res[i] == null) {\n              break;\n            }\n            console.log('adding task' + res[i]);\n\n            this.todoList.unshift(res[i].task);\n          }\n        });\n\n    }\n  }\n\n  addItem(task: string, token: string) {\n    this.todoList.unshift(task);\n\n    const insertTaskUrl = 'http://localhost:8080/insertTask';\n\n    const insertTaskParams: HttpParams = new HttpParams()\n      .append('task', task);\n\n    const insertTaskHeaders: HttpHeaders = new HttpHeaders()\n      .append('Authorization', 'Bearer' + token);\n\n    this.http.post(insertTaskUrl, {\n      withCredentials: true\n    }, {\n        headers: insertTaskHeaders,\n        params: insertTaskParams\n      }).subscribe((res) => {\n        console.log(res);\n      });\n  }\n\n}\n","import {TokenData} from './tokendata';\nimport {UserData } from './userdata';\nimport {HttpParams} from '@angular/common/http';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class TokenService {\n\n  constructor(private _http: HttpClient) {}\n\n  getToken(userData: UserData) {\n    const getTokenUrl = 'http://localhost:8080/oauth/token';\n\n    const getTokenParams: HttpParams = new HttpParams()\n     .append('grant_type', 'password')\n     .append('username', userData.username)\n     .append('password', userData.password);\n\n    const getTokenHeaders: HttpHeaders = new HttpHeaders()\n      .append('Authorization', 'Basic ' + btoa('client:secret'));\n\n    return this._http.post<TokenData>(getTokenUrl, {\n      withCredentials: true\n    }, {\n        headers: getTokenHeaders,\n        params: getTokenParams\n      });\n\n  }\n\n}\n","export class UserData {\n  username;\n  password;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}